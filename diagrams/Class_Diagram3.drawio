<mxfile host="65bd71144e">
    <diagram id="HByLte8Wf8KoSVhzbPTM" name="Page-1">
        <mxGraphModel dx="16780" dy="14060" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="850" pageHeight="1100" background="none" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="32" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
                    <mxGeometry x="-5843" y="-780" width="8130" height="3970" as="geometry"/>
                </mxCell>
                <mxCell id="node7" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Appointment&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Appointment(Timestamp, Time, Time, String, int, int): &lt;br/&gt;+ Appointment(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ create(Object[]): T&lt;br/&gt;+ scopes(String[]): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;+ where(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ delete(String, Object[]): int&lt;br/&gt;+ scope(String): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;# validateNumericalityOf(String[]): NumericValidationBuilder&lt;br/&gt;# dateFormat(String, String[]): void&lt;br/&gt;# timestampFormat(DateFormat, String[]): void&lt;br/&gt;+ updateAll(String, Object[]): int&lt;br/&gt;+ associations(): List&amp;lt;Association&amp;gt;&lt;br/&gt;+ findOrInit(Object[]): T&lt;br/&gt;+ callbackWith(CallbackListener[]): void&lt;br/&gt;# convertWith(Converter, String[]): void&lt;br/&gt;# blankToNull(String[]): void&lt;br/&gt;+ exists(Object): boolean&lt;br/&gt;+ update(String, String, Object[]): int&lt;br/&gt;# dateFormat(DateFormat, String[]): void&lt;br/&gt;+ first(String, Object[]): T&lt;br/&gt;# addScope(String, String): void&lt;br/&gt;+ removeValidator(Validator): void&lt;br/&gt;+ getValidators(Class&amp;lt;Model&amp;gt;): List&amp;lt;Validator&amp;gt;&lt;br/&gt;+ findById(Object): T&lt;br/&gt;# validateRange(String, Number, Number): ValidationBuilder&lt;br/&gt;# validateRegexpOf(String, String): ValidationBuilder&lt;br/&gt;# zeroToNull(String[]): void&lt;br/&gt;+ findOrCreateIt(Object[]): T&lt;br/&gt;+ find(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;# validatePresenceOf(String[]): ValidationBuilder&lt;br/&gt;+ belongsTo(Class&amp;lt;Model&amp;gt;): boolean&lt;br/&gt;+ deleteAll(): int&lt;br/&gt;+ findFirst(String, Object[]): T&lt;br/&gt;+ attributeNames(): Set&amp;lt;String&amp;gt;&lt;br/&gt;+ count(): Long&lt;br/&gt;# timestampFormat(String, String[]): void&lt;br/&gt;+ findBySQL(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ findByCompositeKeys(Object[]): T&lt;br/&gt;+ addValidator(Validator): ValidationBuilder&lt;br/&gt;+ findAll(): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;- modelClass(): Class&amp;lt;T&amp;gt;&lt;br/&gt;+ purgeCache(): void&lt;br/&gt;# validateWith(Validator): ValidationBuilder&lt;br/&gt;+ findWith(ModelListener, String, Object[]): void&lt;br/&gt;# validateEmailOf(String): ValidationBuilder&lt;br/&gt;+ count(String, Object[]): Long&lt;br/&gt;+ metaModel(): MetaModel&lt;br/&gt;+ createIt(Object[]): T&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; timeFrom: Time&lt;br/&gt; metaModel: MetaModel&lt;br/&gt; patientID: int&lt;br/&gt; doctorID: int&lt;br/&gt; date: Timestamp&lt;br/&gt; timeTo: Time&lt;br/&gt; cached: boolean&lt;br/&gt; status: Status&lt;br/&gt; tableName: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-1390" y="1294" width="532" height="1762" as="geometry"/>
                </mxCell>
                <mxCell id="node5" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AppointmentBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AppointmentBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-810" y="1294" width="245" height="86" as="geometry"/>
                </mxCell>
                <mxCell id="16" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node15" target="node3">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node15" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AppointmentsController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AppointmentsController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ init(Javalin): void&lt;br/&gt;- getPatientAppointments(Context): void&lt;br/&gt;- getDoctorAppointments(Context): void&lt;br/&gt;- cancelAppointment(Context): void&lt;br/&gt;- viewAppointmentDetails(Context): void&lt;br/&gt;- getPatientAppointmentsByStatus(Context): void&lt;br/&gt;- getDoctorAppointmentsByStatus(Context): void&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; appointment: Context&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-1346.5" width="445" height="322" as="geometry"/>
                </mxCell>
                <mxCell id="27" style="edgeStyle=none;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node3" target="node21">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="-2240" y="1290" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="28" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node3" target="node7">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="29" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node3" target="node0">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node3" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AppointmentsService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AppointmentsService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getDoctorAppointments(int): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ getDoctorAppointmentsAfterDate(int, Timestamp): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ setAppointment(int, int, int, Status): void&lt;br/&gt;+ getAppointmentDetails(int): Map&amp;lt;String, Object&amp;gt;&lt;br/&gt;+ getDoctorAppointmentsByStatuses(int, List&amp;lt;Status&amp;gt;): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ getPatientAppointments(int): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ getPatientAppointmentsAfterDate(int, Timestamp): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ setAppointment(int, int, int, Status, String): void&lt;br/&gt;+ cancelAppointment(int): void&lt;br/&gt;+ getPatientAppointmentsByStatuses(int, List&amp;lt;Status&amp;gt;): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ getPatientAppointments(int, Status): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ getDoctorAppointments(int, Status): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-1487" y="460" width="726" height="441" as="geometry"/>
                </mxCell>
                <mxCell id="15" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node14" target="node10">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node14" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AvailabilitiesController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AvailabilitiesController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- getDoctorAvailabilities(Context): void&lt;br/&gt;+ init(Javalin): void&lt;br/&gt;- cancelAvailability(Context): void&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; availability: Context&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-2234" width="358" height="202" as="geometry"/>
                </mxCell>
                <mxCell id="26" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node10" target="node21">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node10" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AvailabilitiesService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AvailabilitiesService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getDoctorAvailabilities(int): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ setAvailability(Timestamp, int): void&lt;br/&gt;+ updateAvailability(int, boolean): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-2307" y="329" width="504" height="171" as="geometry"/>
                </mxCell>
                <mxCell id="node21" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Availability&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Availability(Timestamp, Time, Time, int): &lt;br/&gt;+ Availability(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ updateAll(String, Object[]): int&lt;br/&gt;+ delete(String, Object[]): int&lt;br/&gt;+ attributeNames(): Set&amp;lt;String&amp;gt;&lt;br/&gt;+ findBySQL(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;# validateRegexpOf(String, String): ValidationBuilder&lt;br/&gt;+ addValidator(Validator): ValidationBuilder&lt;br/&gt;# validateNumericalityOf(String[]): NumericValidationBuilder&lt;br/&gt;+ scopes(String[]): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;+ callbackWith(CallbackListener[]): void&lt;br/&gt;+ count(): Long&lt;br/&gt;# validateEmailOf(String): ValidationBuilder&lt;br/&gt;+ create(Object[]): T&lt;br/&gt;+ purgeCache(): void&lt;br/&gt;+ findFirst(String, Object[]): T&lt;br/&gt;# dateFormat(DateFormat, String[]): void&lt;br/&gt;+ removeValidator(Validator): void&lt;br/&gt;# timestampFormat(String, String[]): void&lt;br/&gt;+ find(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ findAll(): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ findById(Object): T&lt;br/&gt;+ update(String, String, Object[]): int&lt;br/&gt;# blankToNull(String[]): void&lt;br/&gt;# timestampFormat(DateFormat, String[]): void&lt;br/&gt;+ associations(): List&amp;lt;Association&amp;gt;&lt;br/&gt;+ metaModel(): MetaModel&lt;br/&gt;+ where(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ getValidators(Class&amp;lt;Model&amp;gt;): List&amp;lt;Validator&amp;gt;&lt;br/&gt;+ findOrInit(Object[]): T&lt;br/&gt;+ createIt(Object[]): T&lt;br/&gt;# validatePresenceOf(String[]): ValidationBuilder&lt;br/&gt;- modelClass(): Class&amp;lt;T&amp;gt;&lt;br/&gt;# validateRange(String, Number, Number): ValidationBuilder&lt;br/&gt;+ scope(String): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;# zeroToNull(String[]): void&lt;br/&gt;+ count(String, Object[]): Long&lt;br/&gt;+ findOrCreateIt(Object[]): T&lt;br/&gt;+ findWith(ModelListener, String, Object[]): void&lt;br/&gt;+ exists(Object): boolean&lt;br/&gt;+ first(String, Object[]): T&lt;br/&gt;# validateWith(Validator): ValidationBuilder&lt;br/&gt;# dateFormat(String, String[]): void&lt;br/&gt;# addScope(String, String): void&lt;br/&gt;+ findByCompositeKeys(Object[]): T&lt;br/&gt;+ deleteAll(): int&lt;br/&gt;# convertWith(Converter, String[]): void&lt;br/&gt;+ belongsTo(Class&amp;lt;Model&amp;gt;): boolean&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; timeFrom: Time&lt;br/&gt; metaModel: MetaModel&lt;br/&gt; doctorID: int&lt;br/&gt; date: Timestamp&lt;br/&gt; timeTo: Time&lt;br/&gt; cached: boolean&lt;br/&gt; idName: String&lt;br/&gt; tableName: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-2509" y="1294" width="532" height="1732" as="geometry"/>
                </mxCell>
                <mxCell id="node27" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AvailabilityBatchBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AvailabilityBatchBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-1920" y="1294" width="284" height="86" as="geometry"/>
                </mxCell>
                <mxCell id="node35" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AvailabilityBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AvailabilityBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-1920" y="1410" width="225" height="86" as="geometry"/>
                </mxCell>
                <mxCell id="node13" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AvatarBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AvatarBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-4890" y="1870" width="183" height="86" as="geometry"/>
                </mxCell>
                <mxCell id="node26" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;City&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- City(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ valueOf(String): City&lt;br/&gt;+ values(): City[]&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-4890" y="1693" width="221" height="141" as="geometry"/>
                </mxCell>
                <mxCell id="node1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Db&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Db(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ init(): void&lt;br/&gt;+ close(): void&lt;br/&gt;+ connect(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-5190" y="210" width="179" height="171" as="geometry"/>
                </mxCell>
                <mxCell id="17" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node29" target="node24">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node29" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DiagnosesController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DiagnosesController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getDiagnoses(Context): void&lt;br/&gt;+ init(Javalin): void&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; diagnosis: Context&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-323" width="288" height="172" as="geometry"/>
                </mxCell>
                <mxCell id="30" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node24" target="node0">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node24" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DiagnosesService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DiagnosesService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getDiagnoses(int): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ setDiagnosis(int, String, String): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-396" y="290" width="434" height="141" as="geometry"/>
                </mxCell>
                <mxCell id="node0" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Diagnosis&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Diagnosis(): &lt;br/&gt;+ Diagnosis(int, String, String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ where(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ count(String, Object[]): Long&lt;br/&gt;+ metaModel(): MetaModel&lt;br/&gt;+ count(): Long&lt;br/&gt;+ delete(String, Object[]): int&lt;br/&gt;+ findOrCreateIt(Object[]): T&lt;br/&gt;# validateNumericalityOf(String[]): NumericValidationBuilder&lt;br/&gt;# convertWith(Converter, String[]): void&lt;br/&gt;- modelClass(): Class&amp;lt;T&amp;gt;&lt;br/&gt;+ update(String, String, Object[]): int&lt;br/&gt;+ findBySQL(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ getValidators(Class&amp;lt;Model&amp;gt;): List&amp;lt;Validator&amp;gt;&lt;br/&gt;# validateEmailOf(String): ValidationBuilder&lt;br/&gt;+ addValidator(Validator): ValidationBuilder&lt;br/&gt;# dateFormat(DateFormat, String[]): void&lt;br/&gt;+ findById(Object): T&lt;br/&gt;+ findAll(): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ deleteAll(): int&lt;br/&gt;+ findWith(ModelListener, String, Object[]): void&lt;br/&gt;# addScope(String, String): void&lt;br/&gt;# timestampFormat(String, String[]): void&lt;br/&gt;+ findOrInit(Object[]): T&lt;br/&gt;# timestampFormat(DateFormat, String[]): void&lt;br/&gt;# validateRegexpOf(String, String): ValidationBuilder&lt;br/&gt;# blankToNull(String[]): void&lt;br/&gt;+ scope(String): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;# validateRange(String, Number, Number): ValidationBuilder&lt;br/&gt;+ purgeCache(): void&lt;br/&gt;+ findByCompositeKeys(Object[]): T&lt;br/&gt;# validatePresenceOf(String[]): ValidationBuilder&lt;br/&gt;+ find(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ first(String, Object[]): T&lt;br/&gt;+ associations(): List&amp;lt;Association&amp;gt;&lt;br/&gt;+ exists(Object): boolean&lt;br/&gt;+ scopes(String[]): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;+ attributeNames(): Set&amp;lt;String&amp;gt;&lt;br/&gt;# zeroToNull(String[]): void&lt;br/&gt;+ callbackWith(CallbackListener[]): void&lt;br/&gt;+ createIt(Object[]): T&lt;br/&gt;+ findFirst(String, Object[]): T&lt;br/&gt;+ updateAll(String, Object[]): int&lt;br/&gt;+ removeValidator(Validator): void&lt;br/&gt;+ belongsTo(Class&amp;lt;Model&amp;gt;): boolean&lt;br/&gt;# validateWith(Validator): ValidationBuilder&lt;br/&gt;# dateFormat(String, String[]): void&lt;br/&gt;+ create(Object[]): T&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; metaModel: MetaModel&lt;br/&gt; name: String&lt;br/&gt; details: String&lt;br/&gt; cached: boolean&lt;br/&gt; diagnosisId: int&lt;br/&gt; id: int&lt;br/&gt; tableName: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-290" y="1294" width="532" height="1702" as="geometry"/>
                </mxCell>
                <mxCell id="node12" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DiagnosisBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DiagnosisBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="280" y="1294" width="214" height="86" as="geometry"/>
                </mxCell>
                <mxCell id="node8" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Doctor&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Doctor(String, String, String, String, String, Speciality, String, String): &lt;br/&gt;+ Doctor(User): &lt;br/&gt;+ Doctor(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findByEmail(String): Doctor&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; speciality: Speciality&lt;br/&gt; bio: String&lt;br/&gt; licenceID: String&lt;br/&gt; officeLocation: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-3113" y="2144" width="501" height="292" as="geometry"/>
                </mxCell>
                <mxCell id="node6" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;DoctorInterface&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; speciality: Speciality&lt;br/&gt; bio: String&lt;br/&gt; licenceID: String&lt;br/&gt; officeLocation: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-2851" y="2596" width="228" height="170" as="geometry"/>
                </mxCell>
                <mxCell id="13" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;dashed=1;" edge="1" parent="1" source="node37" target="node32">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node37" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DoctorsController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DoctorsController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ init(Javalin): void&lt;br/&gt;- getDoctorLocations(Context): void&lt;br/&gt;- getDoctors(Context): void&lt;br/&gt;- findDoctors(Context): void&lt;br/&gt;- getDoctorByID(Context): void&lt;br/&gt;- getDoctorSpecialities(Context): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-3816" width="348" height="261" as="geometry"/>
                </mxCell>
                <mxCell id="20" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node32" target="node23">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node32" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DoctorsService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DoctorsService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findDoctors(String, String): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ getDoctorById(int): User&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; doctors: List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt; doctorSpecialities: List&amp;lt;String&amp;gt;&lt;br/&gt; doctorLocations: List&amp;lt;String&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-3893" y="400" width="502" height="232" as="geometry"/>
                </mxCell>
                <mxCell id="node25" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;LoginBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ LoginBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-5190" y="106" width="172" height="86" as="geometry"/>
                </mxCell>
                <mxCell id="4" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="node9" target="node14">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="5" style="edgeStyle=none;html=1;exitX=0;exitY=0.75;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="node9" target="node4">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="6" style="edgeStyle=none;html=1;exitX=0;exitY=0.5;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="node9" target="node37">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="7" style="edgeStyle=none;html=1;exitX=0;exitY=0.25;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="node9" target="node16">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="-3490" y="-320" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="8" style="edgeStyle=none;html=1;exitX=1;exitY=0.75;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="node9" target="node15">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="9" style="edgeStyle=none;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="node9" target="node29">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="-360" y="-160" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="10" style="edgeStyle=none;html=1;exitX=1;exitY=0.25;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" source="node9" target="node36">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node9" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Main&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Main(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ main(String[]): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-2162.5" y="-670" width="215" height="120" as="geometry"/>
                </mxCell>
                <mxCell id="node18" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Patient&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Patient(String, String, String, String): &lt;br/&gt;+ Patient(): &lt;br/&gt;+ Patient(User): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; amka: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-3666" y="2129" width="359" height="171" as="geometry"/>
                </mxCell>
                <mxCell id="node30" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;PatientInterface&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; amka: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-3690" y="2438" width="226" height="100" as="geometry"/>
                </mxCell>
                <mxCell id="14" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node4" target="node20">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node4" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;PatientsController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ PatientsController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- getPatients(Context): void&lt;br/&gt;+ init(Javalin): void&lt;br/&gt;- getPatientByID(Context): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-3064" width="297" height="171" as="geometry"/>
                </mxCell>
                <mxCell id="25" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node20" target="node23">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node20" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;PatientsService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ PatientsService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getPatientById(int): User&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; patients: List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-3093" y="280" width="355" height="142" as="geometry"/>
                </mxCell>
                <mxCell id="node34" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Rating&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Rating(): &lt;br/&gt;+ Rating(int, String, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ delete(String, Object[]): int&lt;br/&gt;+ updateAll(String, Object[]): int&lt;br/&gt;+ findOrInit(Object[]): T&lt;br/&gt;+ findWith(ModelListener, String, Object[]): void&lt;br/&gt;+ exists(Object): boolean&lt;br/&gt;+ scopes(String[]): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;+ findBySQL(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ where(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ findOrCreateIt(Object[]): T&lt;br/&gt;+ update(String, String, Object[]): int&lt;br/&gt;# validateWith(Validator): ValidationBuilder&lt;br/&gt;+ metaModel(): MetaModel&lt;br/&gt;# addScope(String, String): void&lt;br/&gt;# blankToNull(String[]): void&lt;br/&gt;+ create(Object[]): T&lt;br/&gt;+ find(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;# convertWith(Converter, String[]): void&lt;br/&gt;# zeroToNull(String[]): void&lt;br/&gt;+ getValidators(Class&amp;lt;Model&amp;gt;): List&amp;lt;Validator&amp;gt;&lt;br/&gt;+ findAll(): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ purgeCache(): void&lt;br/&gt;+ count(String, Object[]): Long&lt;br/&gt;# timestampFormat(String, String[]): void&lt;br/&gt;+ callbackWith(CallbackListener[]): void&lt;br/&gt;# validatePresenceOf(String[]): ValidationBuilder&lt;br/&gt;# validateNumericalityOf(String[]): NumericValidationBuilder&lt;br/&gt;# dateFormat(String, String[]): void&lt;br/&gt;+ findByCompositeKeys(Object[]): T&lt;br/&gt;+ removeValidator(Validator): void&lt;br/&gt;+ deleteAll(): int&lt;br/&gt;+ attributeNames(): Set&amp;lt;String&amp;gt;&lt;br/&gt;+ count(): Long&lt;br/&gt;# validateRange(String, Number, Number): ValidationBuilder&lt;br/&gt;- modelClass(): Class&amp;lt;T&amp;gt;&lt;br/&gt;# timestampFormat(DateFormat, String[]): void&lt;br/&gt;+ addValidator(Validator): ValidationBuilder&lt;br/&gt;# validateEmailOf(String): ValidationBuilder&lt;br/&gt;+ belongsTo(Class&amp;lt;Model&amp;gt;): boolean&lt;br/&gt;+ createIt(Object[]): T&lt;br/&gt;# dateFormat(DateFormat, String[]): void&lt;br/&gt;+ scope(String): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;+ associations(): List&amp;lt;Association&amp;gt;&lt;br/&gt;+ findById(Object): T&lt;br/&gt;+ first(String, Object[]): T&lt;br/&gt;# validateRegexpOf(String, String): ValidationBuilder&lt;br/&gt;+ findFirst(String, Object[]): T&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; metaModel: MetaModel&lt;br/&gt; doctorId: int&lt;br/&gt; patientId: int&lt;br/&gt; comments: String&lt;br/&gt; cached: boolean&lt;br/&gt; stars: int&lt;br/&gt; tableName: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="837" y="1294" width="532" height="1702" as="geometry"/>
                </mxCell>
                <mxCell id="node28" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RatingBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RatingBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="1400" y="1294" width="181" height="86" as="geometry"/>
                </mxCell>
                <mxCell id="18" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node36" target="node33">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node36" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RatingsController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RatingsController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- getMyRatings(Context): void&lt;br/&gt;+ init(Javalin): void&lt;br/&gt;- getRatings(Context): void&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; rating: Context&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="731" width="288" height="202" as="geometry"/>
                </mxCell>
                <mxCell id="31" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node33" target="node34">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node33" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RatingsService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RatingsService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setRating(int, String, int, int): void&lt;br/&gt;+ getRatings(int): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ calcRating(int): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="670" y="310" width="410" height="171" as="geometry"/>
                </mxCell>
                <mxCell id="node11" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RegisterBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RegisterBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-5190" width="200" height="86" as="geometry"/>
                </mxCell>
                <mxCell id="node19" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Speciality&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- Speciality(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): Speciality[]&lt;br/&gt;+ valueOf(String): Speciality&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-4890" y="1515.5" width="267" height="141" as="geometry"/>
                </mxCell>
                <mxCell id="node17" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Status&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- Status(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): Status[]&lt;br/&gt;+ valueOf(String): Status&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-808.5" y="1420" width="242" height="141" as="geometry"/>
                </mxCell>
                <mxCell id="node23" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;User&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ User(String, String, String, String, UserTypeEnum): &lt;br/&gt;+ User(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ attributeNames(): Set&amp;lt;String&amp;gt;&lt;br/&gt;# timestampFormat(String, String[]): void&lt;br/&gt;# validatePresenceOf(String[]): ValidationBuilder&lt;br/&gt;# timestampFormat(DateFormat, String[]): void&lt;br/&gt;+ find(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ callbackWith(CallbackListener[]): void&lt;br/&gt;+ findByCompositeKeys(Object[]): T&lt;br/&gt;# validateWith(Validator): ValidationBuilder&lt;br/&gt;+ removeValidator(Validator): void&lt;br/&gt;+ delete(String, Object[]): int&lt;br/&gt;+ updateAll(String, Object[]): int&lt;br/&gt;# addScope(String, String): void&lt;br/&gt;+ findWith(ModelListener, String, Object[]): void&lt;br/&gt;+ findFirst(String, Object[]): T&lt;br/&gt;# validateRange(String, Number, Number): ValidationBuilder&lt;br/&gt;# validateRegexpOf(String, String): ValidationBuilder&lt;br/&gt;+ scopes(String[]): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;+ metaModel(): MetaModel&lt;br/&gt;+ create(Object[]): T&lt;br/&gt;+ update(String, String, Object[]): int&lt;br/&gt;+ first(String, Object[]): T&lt;br/&gt;+ where(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ count(): Long&lt;br/&gt;+ deleteAll(): int&lt;br/&gt;+ count(String, Object[]): Long&lt;br/&gt;# validateNumericalityOf(String[]): NumericValidationBuilder&lt;br/&gt;+ findById(Object): T&lt;br/&gt;# dateFormat(DateFormat, String[]): void&lt;br/&gt;+ findAll(): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ scope(String): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;# zeroToNull(String[]): void&lt;br/&gt;+ purgeCache(): void&lt;br/&gt;+ exists(Object): boolean&lt;br/&gt;+ findOrInit(Object[]): T&lt;br/&gt;# convertWith(Converter, String[]): void&lt;br/&gt;# dateFormat(String, String[]): void&lt;br/&gt;+ belongsTo(Class&amp;lt;Model&amp;gt;): boolean&lt;br/&gt;+ findBySQL(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ createIt(Object[]): T&lt;br/&gt;+ addValidator(Validator): ValidationBuilder&lt;br/&gt;+ getValidators(Class&amp;lt;Model&amp;gt;): List&amp;lt;Validator&amp;gt;&lt;br/&gt;+ findOrCreateIt(Object[]): T&lt;br/&gt;# validateEmailOf(String): ValidationBuilder&lt;br/&gt;# blankToNull(String[]): void&lt;br/&gt;+ associations(): List&amp;lt;Association&amp;gt;&lt;br/&gt;- modelClass(): Class&amp;lt;T&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; metaModel: MetaModel&lt;br/&gt; cached: boolean&lt;br/&gt; type: UserTypeEnum&lt;br/&gt; tableName: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-4500" y="1320" width="532" height="1612" as="geometry"/>
                </mxCell>
                <mxCell id="11" style="edgeStyle=none;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;" edge="1" parent="1" source="node16" target="node22">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node16" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;UserController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ UserController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- registerUser(Context): void&lt;br/&gt;- getAvatar(Context): void&lt;br/&gt;- loginUser(Context): void&lt;br/&gt;- getUsers(Context): void&lt;br/&gt;- addIfNotNull(Map&amp;lt;String, Object&amp;gt;, String, Object): void&lt;br/&gt;+ init(Javalin): void&lt;br/&gt;- getLogin(Context): void&lt;br/&gt;- updateAvatar(Context): void&lt;br/&gt;- logoutUser(Context): void&lt;br/&gt;- getUserData(User): Map&amp;lt;String, Object&amp;gt;&lt;br/&gt;- updateUser(Context): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-4800" width="509" height="411" as="geometry"/>
                </mxCell>
                <mxCell id="12" style="edgeStyle=none;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;dashed=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="node22" target="node23">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="node22" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;UserService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ UserService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ updateAvatar(int, String): boolean&lt;br/&gt;+ updateUser(int, RegisterBody): boolean&lt;br/&gt;+ loginUser(String, String): User&lt;br/&gt;+ getAvatar(int): String&lt;br/&gt;+ registerUser(RegisterBody): boolean&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; users: List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-4735" y="537" width="379" height="262" as="geometry"/>
                </mxCell>
                <mxCell id="node31" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;UserTypeEnum&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- UserTypeEnum(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): UserTypeEnum[]&lt;br/&gt;+ valueOf(String): UserTypeEnum&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-4890" y="1330" width="313" height="141" as="geometry"/>
                </mxCell>
                <mxCell id="node2" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;UserWrapper&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;# UserWrapper(User): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ saveIt(): boolean&lt;br/&gt;# get(String): Object&lt;br/&gt;# set(String, Object): void&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; password: String&lt;br/&gt; email: String&lt;br/&gt; phone: String&lt;br/&gt; type: UserTypeEnum&lt;br/&gt; avatar: String&lt;br/&gt; id: int&lt;br/&gt; fullName: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;" parent="1" vertex="1">
                    <mxGeometry x="-3280" y="1320" width="251" height="382" as="geometry"/>
                </mxCell>
                <mxCell id="edge3" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=blockThin;endSize=12;strokeColor=#000000;exitX=0.750;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=0.000;entryDx=0;entryDy=0;endFill=0;" parent="1" source="node8" target="node6" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <Array as="points"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="edge0" value="" style="html=1;rounded=1;dashed=0;startArrow=none;endArrow=blockThin;endSize=12;strokeColor=#000000;exitX=0.250;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;endFill=0;" parent="1" source="node8" target="node2" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="edge2" value="" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=blockThin;endSize=12;strokeColor=#000000;exitX=0.250;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=0.000;entryDx=0;entryDy=0;endFill=0;" parent="1" source="node18" target="node30" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry">
                        <Array as="points">
                            <mxPoint x="-3577" y="2350"/>
                            <mxPoint x="-3577" y="2350"/>
                        </Array>
                    </mxGeometry>
                </mxCell>
                <mxCell id="edge1" value="" style="html=1;rounded=1;dashed=0;startArrow=none;endArrow=blockThin;endSize=12;strokeColor=#000000;exitX=0.750;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;endFill=0;" parent="1" source="node18" target="node2" edge="1">
                    <mxGeometry width="50" height="50" relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="2" value="" style="endArrow=diamondThin;endFill=1;endSize=24;html=1;entryX=0.001;entryY=0.356;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" target="node2">
                    <mxGeometry width="160" relative="1" as="geometry">
                        <mxPoint x="-3968" y="1460" as="sourcePoint"/>
                        <mxPoint x="-3808" y="1460" as="targetPoint"/>
                    </mxGeometry>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>