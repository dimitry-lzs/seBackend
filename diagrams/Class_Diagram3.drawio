<mxGraphModel dx="0" dy="0" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" background="none" math="0" shadow="0">
  <root>
    <mxCell id="0" />
    <mxCell id="1" parent="0" />
    <mxCell id="node7" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Appointment&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Appointment(Timestamp, Time, Time, String, int, int): &lt;br/&gt;+ Appointment(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ create(Object[]): T&lt;br/&gt;+ scopes(String[]): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;+ where(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ delete(String, Object[]): int&lt;br/&gt;+ scope(String): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;# validateNumericalityOf(String[]): NumericValidationBuilder&lt;br/&gt;# dateFormat(String, String[]): void&lt;br/&gt;# timestampFormat(DateFormat, String[]): void&lt;br/&gt;+ updateAll(String, Object[]): int&lt;br/&gt;+ associations(): List&amp;lt;Association&amp;gt;&lt;br/&gt;+ findOrInit(Object[]): T&lt;br/&gt;+ callbackWith(CallbackListener[]): void&lt;br/&gt;# convertWith(Converter, String[]): void&lt;br/&gt;# blankToNull(String[]): void&lt;br/&gt;+ exists(Object): boolean&lt;br/&gt;+ update(String, String, Object[]): int&lt;br/&gt;# dateFormat(DateFormat, String[]): void&lt;br/&gt;+ first(String, Object[]): T&lt;br/&gt;# addScope(String, String): void&lt;br/&gt;+ removeValidator(Validator): void&lt;br/&gt;+ getValidators(Class&amp;lt;Model&amp;gt;): List&amp;lt;Validator&amp;gt;&lt;br/&gt;+ findById(Object): T&lt;br/&gt;# validateRange(String, Number, Number): ValidationBuilder&lt;br/&gt;# validateRegexpOf(String, String): ValidationBuilder&lt;br/&gt;# zeroToNull(String[]): void&lt;br/&gt;+ findOrCreateIt(Object[]): T&lt;br/&gt;+ find(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;# validatePresenceOf(String[]): ValidationBuilder&lt;br/&gt;+ belongsTo(Class&amp;lt;Model&amp;gt;): boolean&lt;br/&gt;+ deleteAll(): int&lt;br/&gt;+ findFirst(String, Object[]): T&lt;br/&gt;+ attributeNames(): Set&amp;lt;String&amp;gt;&lt;br/&gt;+ count(): Long&lt;br/&gt;# timestampFormat(String, String[]): void&lt;br/&gt;+ findBySQL(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ findByCompositeKeys(Object[]): T&lt;br/&gt;+ addValidator(Validator): ValidationBuilder&lt;br/&gt;+ findAll(): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;- modelClass(): Class&amp;lt;T&amp;gt;&lt;br/&gt;+ purgeCache(): void&lt;br/&gt;# validateWith(Validator): ValidationBuilder&lt;br/&gt;+ findWith(ModelListener, String, Object[]): void&lt;br/&gt;# validateEmailOf(String): ValidationBuilder&lt;br/&gt;+ count(String, Object[]): Long&lt;br/&gt;+ metaModel(): MetaModel&lt;br/&gt;+ createIt(Object[]): T&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; timeFrom: Time&lt;br/&gt; metaModel: MetaModel&lt;br/&gt; patientID: int&lt;br/&gt; doctorID: int&lt;br/&gt; date: Timestamp&lt;br/&gt; timeTo: Time&lt;br/&gt; cached: boolean&lt;br/&gt; status: Status&lt;br/&gt; tableName: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-1529" y="1264" width="532" height="1762" as="geometry" />
    </mxCell>
    <mxCell id="node5" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AppointmentBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AppointmentBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-1827" y="1430" width="245" height="86" as="geometry" />
    </mxCell>
    <mxCell id="node15" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AppointmentsController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AppointmentsController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ init(Javalin): void&lt;br/&gt;- getPatientAppointments(Context): void&lt;br/&gt;- getDoctorAppointments(Context): void&lt;br/&gt;- cancelAppointment(Context): void&lt;br/&gt;- viewAppointmentDetails(Context): void&lt;br/&gt;- getPatientAppointmentsByStatus(Context): void&lt;br/&gt;- getDoctorAppointmentsByStatus(Context): void&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; appointment: Context&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1272" y="5625" width="445" height="322" as="geometry" />
    </mxCell>
    <mxCell id="node3" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AppointmentsService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AppointmentsService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getDoctorAppointments(int): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ getDoctorAppointmentsAfterDate(int, Timestamp): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ setAppointment(int, int, int, Status): void&lt;br/&gt;+ getAppointmentDetails(int): Map&amp;lt;String, Object&amp;gt;&lt;br/&gt;+ getDoctorAppointmentsByStatuses(int, List&amp;lt;Status&amp;gt;): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ getPatientAppointments(int): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ getPatientAppointmentsAfterDate(int, Timestamp): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ setAppointment(int, int, int, Status, String): void&lt;br/&gt;+ cancelAppointment(int): void&lt;br/&gt;+ getPatientAppointmentsByStatuses(int, List&amp;lt;Status&amp;gt;): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ getPatientAppointments(int, Status): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ getDoctorAppointments(int, Status): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1272" y="6393" width="726" height="441" as="geometry" />
    </mxCell>
    <mxCell id="node14" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AvailabilitiesController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AvailabilitiesController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- getDoctorAvailabilities(Context): void&lt;br/&gt;+ init(Javalin): void&lt;br/&gt;- cancelAvailability(Context): void&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; availability: Context&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-215" y="5569" width="358" height="202" as="geometry" />
    </mxCell>
    <mxCell id="node10" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AvailabilitiesService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AvailabilitiesService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getDoctorAvailabilities(int): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ setAvailability(Timestamp, int): void&lt;br/&gt;+ updateAvailability(int, boolean): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-215" y="6515" width="504" height="171" as="geometry" />
    </mxCell>
    <mxCell id="node21" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Availability&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Availability(Timestamp, Time, Time, int): &lt;br/&gt;+ Availability(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ updateAll(String, Object[]): int&lt;br/&gt;+ delete(String, Object[]): int&lt;br/&gt;+ attributeNames(): Set&amp;lt;String&amp;gt;&lt;br/&gt;+ findBySQL(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;# validateRegexpOf(String, String): ValidationBuilder&lt;br/&gt;+ addValidator(Validator): ValidationBuilder&lt;br/&gt;# validateNumericalityOf(String[]): NumericValidationBuilder&lt;br/&gt;+ scopes(String[]): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;+ callbackWith(CallbackListener[]): void&lt;br/&gt;+ count(): Long&lt;br/&gt;# validateEmailOf(String): ValidationBuilder&lt;br/&gt;+ create(Object[]): T&lt;br/&gt;+ purgeCache(): void&lt;br/&gt;+ findFirst(String, Object[]): T&lt;br/&gt;# dateFormat(DateFormat, String[]): void&lt;br/&gt;+ removeValidator(Validator): void&lt;br/&gt;# timestampFormat(String, String[]): void&lt;br/&gt;+ find(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ findAll(): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ findById(Object): T&lt;br/&gt;+ update(String, String, Object[]): int&lt;br/&gt;# blankToNull(String[]): void&lt;br/&gt;# timestampFormat(DateFormat, String[]): void&lt;br/&gt;+ associations(): List&amp;lt;Association&amp;gt;&lt;br/&gt;+ metaModel(): MetaModel&lt;br/&gt;+ where(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ getValidators(Class&amp;lt;Model&amp;gt;): List&amp;lt;Validator&amp;gt;&lt;br/&gt;+ findOrInit(Object[]): T&lt;br/&gt;+ createIt(Object[]): T&lt;br/&gt;# validatePresenceOf(String[]): ValidationBuilder&lt;br/&gt;- modelClass(): Class&amp;lt;T&amp;gt;&lt;br/&gt;# validateRange(String, Number, Number): ValidationBuilder&lt;br/&gt;+ scope(String): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;# zeroToNull(String[]): void&lt;br/&gt;+ count(String, Object[]): Long&lt;br/&gt;+ findOrCreateIt(Object[]): T&lt;br/&gt;+ findWith(ModelListener, String, Object[]): void&lt;br/&gt;+ exists(Object): boolean&lt;br/&gt;+ first(String, Object[]): T&lt;br/&gt;# validateWith(Validator): ValidationBuilder&lt;br/&gt;# dateFormat(String, String[]): void&lt;br/&gt;# addScope(String, String): void&lt;br/&gt;+ findByCompositeKeys(Object[]): T&lt;br/&gt;+ deleteAll(): int&lt;br/&gt;# convertWith(Converter, String[]): void&lt;br/&gt;+ belongsTo(Class&amp;lt;Model&amp;gt;): boolean&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; timeFrom: Time&lt;br/&gt; metaModel: MetaModel&lt;br/&gt; doctorID: int&lt;br/&gt; date: Timestamp&lt;br/&gt; timeTo: Time&lt;br/&gt; cached: boolean&lt;br/&gt; idName: String&lt;br/&gt; tableName: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-2509" y="1294" width="532" height="1732" as="geometry" />
    </mxCell>
    <mxCell id="node27" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AvailabilityBatchBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AvailabilityBatchBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-2816" y="1437" width="284" height="86" as="geometry" />
    </mxCell>
    <mxCell id="node35" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AvailabilityBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AvailabilityBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-2787" y="1571" width="225" height="86" as="geometry" />
    </mxCell>
    <mxCell id="node13" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AvatarBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AvatarBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-697" y="1504" width="183" height="86" as="geometry" />
    </mxCell>
    <mxCell id="node26" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;City&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- City(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ valueOf(String): City&lt;br/&gt;+ values(): City[]&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-713" y="2384" width="221" height="141" as="geometry" />
    </mxCell>
    <mxCell id="node1" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Db&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Db(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ init(): void&lt;br/&gt;+ close(): void&lt;br/&gt;+ connect(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2728" y="3429" width="179" height="171" as="geometry" />
    </mxCell>
    <mxCell id="node29" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DiagnosesController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DiagnosesController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getDiagnoses(Context): void&lt;br/&gt;+ init(Javalin): void&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; diagnosis: Context&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-3445" y="5568" width="288" height="172" as="geometry" />
    </mxCell>
    <mxCell id="node24" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DiagnosesService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DiagnosesService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getDiagnoses(int): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ setDiagnosis(int, String, String): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-3407" y="6655" width="434" height="141" as="geometry" />
    </mxCell>
    <mxCell id="node0" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Diagnosis&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Diagnosis(): &lt;br/&gt;+ Diagnosis(int, String, String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ where(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ count(String, Object[]): Long&lt;br/&gt;+ metaModel(): MetaModel&lt;br/&gt;+ count(): Long&lt;br/&gt;+ delete(String, Object[]): int&lt;br/&gt;+ findOrCreateIt(Object[]): T&lt;br/&gt;# validateNumericalityOf(String[]): NumericValidationBuilder&lt;br/&gt;# convertWith(Converter, String[]): void&lt;br/&gt;- modelClass(): Class&amp;lt;T&amp;gt;&lt;br/&gt;+ update(String, String, Object[]): int&lt;br/&gt;+ findBySQL(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ getValidators(Class&amp;lt;Model&amp;gt;): List&amp;lt;Validator&amp;gt;&lt;br/&gt;# validateEmailOf(String): ValidationBuilder&lt;br/&gt;+ addValidator(Validator): ValidationBuilder&lt;br/&gt;# dateFormat(DateFormat, String[]): void&lt;br/&gt;+ findById(Object): T&lt;br/&gt;+ findAll(): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ deleteAll(): int&lt;br/&gt;+ findWith(ModelListener, String, Object[]): void&lt;br/&gt;# addScope(String, String): void&lt;br/&gt;# timestampFormat(String, String[]): void&lt;br/&gt;+ findOrInit(Object[]): T&lt;br/&gt;# timestampFormat(DateFormat, String[]): void&lt;br/&gt;# validateRegexpOf(String, String): ValidationBuilder&lt;br/&gt;# blankToNull(String[]): void&lt;br/&gt;+ scope(String): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;# validateRange(String, Number, Number): ValidationBuilder&lt;br/&gt;+ purgeCache(): void&lt;br/&gt;+ findByCompositeKeys(Object[]): T&lt;br/&gt;# validatePresenceOf(String[]): ValidationBuilder&lt;br/&gt;+ find(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ first(String, Object[]): T&lt;br/&gt;+ associations(): List&amp;lt;Association&amp;gt;&lt;br/&gt;+ exists(Object): boolean&lt;br/&gt;+ scopes(String[]): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;+ attributeNames(): Set&amp;lt;String&amp;gt;&lt;br/&gt;# zeroToNull(String[]): void&lt;br/&gt;+ callbackWith(CallbackListener[]): void&lt;br/&gt;+ createIt(Object[]): T&lt;br/&gt;+ findFirst(String, Object[]): T&lt;br/&gt;+ updateAll(String, Object[]): int&lt;br/&gt;+ removeValidator(Validator): void&lt;br/&gt;+ belongsTo(Class&amp;lt;Model&amp;gt;): boolean&lt;br/&gt;# validateWith(Validator): ValidationBuilder&lt;br/&gt;# dateFormat(String, String[]): void&lt;br/&gt;+ create(Object[]): T&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; metaModel: MetaModel&lt;br/&gt; name: String&lt;br/&gt; details: String&lt;br/&gt; cached: boolean&lt;br/&gt; diagnosisId: int&lt;br/&gt; id: int&lt;br/&gt; tableName: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-1397" y="3357" width="532" height="1702" as="geometry" />
    </mxCell>
    <mxCell id="node12" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DiagnosisBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DiagnosisBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-1704" y="3532" width="214" height="86" as="geometry" />
    </mxCell>
    <mxCell id="node8" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Doctor&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Doctor(String, String, String, String, String, Speciality, String, String): &lt;br/&gt;+ Doctor(User): &lt;br/&gt;+ Doctor(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findByEmail(String): Doctor&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; speciality: Speciality&lt;br/&gt; bio: String&lt;br/&gt; licenceID: String&lt;br/&gt; officeLocation: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-130" y="3713" width="501" height="292" as="geometry" />
    </mxCell>
    <mxCell id="node6" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;DoctorInterface&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; speciality: Speciality&lt;br/&gt; bio: String&lt;br/&gt; licenceID: String&lt;br/&gt; officeLocation: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="132" y="4165" width="228" height="170" as="geometry" />
    </mxCell>
    <mxCell id="node37" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DoctorsController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DoctorsController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ init(Javalin): void&lt;br/&gt;- getDoctorLocations(Context): void&lt;br/&gt;- getDoctors(Context): void&lt;br/&gt;- findDoctors(Context): void&lt;br/&gt;- getDoctorByID(Context): void&lt;br/&gt;- getDoctorSpecialities(Context): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-2527" y="5523" width="348" height="261" as="geometry" />
    </mxCell>
    <mxCell id="node32" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DoctorsService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DoctorsService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findDoctors(String, String): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ getDoctorById(int): User&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; doctors: List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt; doctorSpecialities: List&amp;lt;String&amp;gt;&lt;br/&gt; doctorLocations: List&amp;lt;String&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-2739" y="6538" width="502" height="232" as="geometry" />
    </mxCell>
    <mxCell id="node25" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;LoginBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ LoginBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-664" y="2135" width="172" height="86" as="geometry" />
    </mxCell>
    <mxCell id="node9" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Main&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Main(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ main(String[]): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2710" y="3249" width="215" height="120" as="geometry" />
    </mxCell>
    <mxCell id="node18" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Patient&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Patient(String, String, String, String): &lt;br/&gt;+ Patient(): &lt;br/&gt;+ Patient(User): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; amka: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-683" y="3698" width="359" height="171" as="geometry" />
    </mxCell>
    <mxCell id="node30" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;PatientInterface&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; amka: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-707" y="4007" width="226" height="100" as="geometry" />
    </mxCell>
    <mxCell id="node4" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;PatientsController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ PatientsController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- getPatients(Context): void&lt;br/&gt;+ init(Javalin): void&lt;br/&gt;- getPatientByID(Context): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-863" y="5584" width="297" height="171" as="geometry" />
    </mxCell>
    <mxCell id="node20" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;PatientsService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ PatientsService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getPatientById(int): User&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; patients: List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-863" y="6567" width="355" height="142" as="geometry" />
    </mxCell>
    <mxCell id="node34" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Rating&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Rating(): &lt;br/&gt;+ Rating(int, String, int, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ delete(String, Object[]): int&lt;br/&gt;+ updateAll(String, Object[]): int&lt;br/&gt;+ findOrInit(Object[]): T&lt;br/&gt;+ findWith(ModelListener, String, Object[]): void&lt;br/&gt;+ exists(Object): boolean&lt;br/&gt;+ scopes(String[]): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;+ findBySQL(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ where(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ findOrCreateIt(Object[]): T&lt;br/&gt;+ update(String, String, Object[]): int&lt;br/&gt;# validateWith(Validator): ValidationBuilder&lt;br/&gt;+ metaModel(): MetaModel&lt;br/&gt;# addScope(String, String): void&lt;br/&gt;# blankToNull(String[]): void&lt;br/&gt;+ create(Object[]): T&lt;br/&gt;+ find(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;# convertWith(Converter, String[]): void&lt;br/&gt;# zeroToNull(String[]): void&lt;br/&gt;+ getValidators(Class&amp;lt;Model&amp;gt;): List&amp;lt;Validator&amp;gt;&lt;br/&gt;+ findAll(): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ purgeCache(): void&lt;br/&gt;+ count(String, Object[]): Long&lt;br/&gt;# timestampFormat(String, String[]): void&lt;br/&gt;+ callbackWith(CallbackListener[]): void&lt;br/&gt;# validatePresenceOf(String[]): ValidationBuilder&lt;br/&gt;# validateNumericalityOf(String[]): NumericValidationBuilder&lt;br/&gt;# dateFormat(String, String[]): void&lt;br/&gt;+ findByCompositeKeys(Object[]): T&lt;br/&gt;+ removeValidator(Validator): void&lt;br/&gt;+ deleteAll(): int&lt;br/&gt;+ attributeNames(): Set&amp;lt;String&amp;gt;&lt;br/&gt;+ count(): Long&lt;br/&gt;# validateRange(String, Number, Number): ValidationBuilder&lt;br/&gt;- modelClass(): Class&amp;lt;T&amp;gt;&lt;br/&gt;# timestampFormat(DateFormat, String[]): void&lt;br/&gt;+ addValidator(Validator): ValidationBuilder&lt;br/&gt;# validateEmailOf(String): ValidationBuilder&lt;br/&gt;+ belongsTo(Class&amp;lt;Model&amp;gt;): boolean&lt;br/&gt;+ createIt(Object[]): T&lt;br/&gt;# dateFormat(DateFormat, String[]): void&lt;br/&gt;+ scope(String): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;+ associations(): List&amp;lt;Association&amp;gt;&lt;br/&gt;+ findById(Object): T&lt;br/&gt;+ first(String, Object[]): T&lt;br/&gt;# validateRegexpOf(String, String): ValidationBuilder&lt;br/&gt;+ findFirst(String, Object[]): T&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; metaModel: MetaModel&lt;br/&gt; doctorId: int&lt;br/&gt; patientId: int&lt;br/&gt; comments: String&lt;br/&gt; cached: boolean&lt;br/&gt; stars: int&lt;br/&gt; tableName: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="522" y="1291" width="532" height="1702" as="geometry" />
    </mxCell>
    <mxCell id="node28" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RatingBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RatingBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="291" y="1563" width="181" height="86" as="geometry" />
    </mxCell>
    <mxCell id="node36" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RatingsController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RatingsController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- getMyRatings(Context): void&lt;br/&gt;+ init(Javalin): void&lt;br/&gt;- getRatings(Context): void&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; rating: Context&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="478" y="5645" width="288" height="202" as="geometry" />
    </mxCell>
    <mxCell id="node33" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RatingsService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RatingsService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setRating(int, String, int, int): void&lt;br/&gt;+ getRatings(int): List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;br/&gt;+ calcRating(int): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="478" y="6393" width="410" height="171" as="geometry" />
    </mxCell>
    <mxCell id="node11" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RegisterBody&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RegisterBody(): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-692" y="2246" width="200" height="86" as="geometry" />
    </mxCell>
    <mxCell id="node19" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Speciality&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- Speciality(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): Speciality[]&lt;br/&gt;+ valueOf(String): Speciality&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-759" y="1898" width="267" height="141" as="geometry" />
    </mxCell>
    <mxCell id="node17" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Status&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- Status(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): Status[]&lt;br/&gt;+ valueOf(String): Status&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-1825" y="1585" width="242" height="141" as="geometry" />
    </mxCell>
    <mxCell id="node23" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;User&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ User(String, String, String, String, UserTypeEnum): &lt;br/&gt;+ User(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ attributeNames(): Set&amp;lt;String&amp;gt;&lt;br/&gt;# timestampFormat(String, String[]): void&lt;br/&gt;# validatePresenceOf(String[]): ValidationBuilder&lt;br/&gt;# timestampFormat(DateFormat, String[]): void&lt;br/&gt;+ find(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ callbackWith(CallbackListener[]): void&lt;br/&gt;+ findByCompositeKeys(Object[]): T&lt;br/&gt;# validateWith(Validator): ValidationBuilder&lt;br/&gt;+ removeValidator(Validator): void&lt;br/&gt;+ delete(String, Object[]): int&lt;br/&gt;+ updateAll(String, Object[]): int&lt;br/&gt;# addScope(String, String): void&lt;br/&gt;+ findWith(ModelListener, String, Object[]): void&lt;br/&gt;+ findFirst(String, Object[]): T&lt;br/&gt;# validateRange(String, Number, Number): ValidationBuilder&lt;br/&gt;# validateRegexpOf(String, String): ValidationBuilder&lt;br/&gt;+ scopes(String[]): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;+ metaModel(): MetaModel&lt;br/&gt;+ create(Object[]): T&lt;br/&gt;+ update(String, String, Object[]): int&lt;br/&gt;+ first(String, Object[]): T&lt;br/&gt;+ where(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ count(): Long&lt;br/&gt;+ deleteAll(): int&lt;br/&gt;+ count(String, Object[]): Long&lt;br/&gt;# validateNumericalityOf(String[]): NumericValidationBuilder&lt;br/&gt;+ findById(Object): T&lt;br/&gt;# dateFormat(DateFormat, String[]): void&lt;br/&gt;+ findAll(): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ scope(String): ScopeBuilder&amp;lt;T&amp;gt;&lt;br/&gt;# zeroToNull(String[]): void&lt;br/&gt;+ purgeCache(): void&lt;br/&gt;+ exists(Object): boolean&lt;br/&gt;+ findOrInit(Object[]): T&lt;br/&gt;# convertWith(Converter, String[]): void&lt;br/&gt;# dateFormat(String, String[]): void&lt;br/&gt;+ belongsTo(Class&amp;lt;Model&amp;gt;): boolean&lt;br/&gt;+ findBySQL(String, Object[]): LazyList&amp;lt;T&amp;gt;&lt;br/&gt;+ createIt(Object[]): T&lt;br/&gt;+ addValidator(Validator): ValidationBuilder&lt;br/&gt;+ getValidators(Class&amp;lt;Model&amp;gt;): List&amp;lt;Validator&amp;gt;&lt;br/&gt;+ findOrCreateIt(Object[]): T&lt;br/&gt;# validateEmailOf(String): ValidationBuilder&lt;br/&gt;# blankToNull(String[]): void&lt;br/&gt;+ associations(): List&amp;lt;Association&amp;gt;&lt;br/&gt;- modelClass(): Class&amp;lt;T&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; metaModel: MetaModel&lt;br/&gt; cached: boolean&lt;br/&gt; type: UserTypeEnum&lt;br/&gt; tableName: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-413" y="1163" width="532" height="1612" as="geometry" />
    </mxCell>
    <mxCell id="node16" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;UserController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ UserController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- registerUser(Context): void&lt;br/&gt;- getAvatar(Context): void&lt;br/&gt;- loginUser(Context): void&lt;br/&gt;- getUsers(Context): void&lt;br/&gt;- addIfNotNull(Map&amp;lt;String, Object&amp;gt;, String, Object): void&lt;br/&gt;+ init(Javalin): void&lt;br/&gt;- getLogin(Context): void&lt;br/&gt;- updateAvatar(Context): void&lt;br/&gt;- logoutUser(Context): void&lt;br/&gt;- getUserData(User): Map&amp;lt;String, Object&amp;gt;&lt;br/&gt;- updateUser(Context): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-1868" y="5526" width="509" height="411" as="geometry" />
    </mxCell>
    <mxCell id="node22" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;UserService&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ UserService(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ updateAvatar(int, String): boolean&lt;br/&gt;+ updateUser(int, RegisterBody): boolean&lt;br/&gt;+ loginUser(String, String): User&lt;br/&gt;+ getAvatar(int): String&lt;br/&gt;+ registerUser(RegisterBody): boolean&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; users: List&amp;lt;Map&amp;lt;String, Object&amp;gt;&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-1803" y="6467" width="379" height="262" as="geometry" />
    </mxCell>
    <mxCell id="node31" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;UserTypeEnum&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- UserTypeEnum(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): UserTypeEnum[]&lt;br/&gt;+ valueOf(String): UserTypeEnum&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-762" y="1691" width="313" height="141" as="geometry" />
    </mxCell>
    <mxCell id="node2" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;UserWrapper&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;# UserWrapper(User): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ saveIt(): boolean&lt;br/&gt;# get(String): Object&lt;br/&gt;# set(String, Object): void&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt; password: String&lt;br/&gt; email: String&lt;br/&gt; phone: String&lt;br/&gt; type: UserTypeEnum&lt;br/&gt; avatar: String&lt;br/&gt; id: int&lt;br/&gt; fullName: String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-297" y="2889" width="251" height="382" as="geometry" />
    </mxCell>
    <mxCell id="edge3" edge="1" value="" parent="1" source="node8" target="node6" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.750;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge0" edge="1" value="" parent="1" source="node8" target="node2" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.250;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="-5" y="3469" />
          <mxPoint x="-171" y="3469" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge2" edge="1" value="" parent="1" source="node18" target="node30" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.250;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=0.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge1" edge="1" value="" parent="1" source="node18" target="node2" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.750;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="-414" y="3465" />
          <mxPoint x="-171" y="3465" />
        </Array>
      </mxGeometry>
    </mxCell>
  </root>
</mxGraphModel>